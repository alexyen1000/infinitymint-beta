"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfinityMintAsset__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "changee",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "PermissionChange",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "TransferedOwnership",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "rarity",
                type: "uint256",
            },
        ],
        name: "addAsset",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "rarities",
                type: "uint256[]",
            },
        ],
        name: "addAssets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "addName",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "approved",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "assetsType",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string[]",
                name: "newNames",
                type: "string[]",
            },
        ],
        name: "combineNames",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "deployer",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "pathIds",
                type: "uint32[]",
            },
        ],
        name: "flatPathSections",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "getColours",
        outputs: [
            {
                internalType: "uint32[]",
                name: "result",
                type: "uint32[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
            {
                internalType: "contract RandomNumber",
                name: "",
                type: "address",
            },
        ],
        name: "getMintData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "nameCount",
                type: "uint256",
            },
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "getNames",
        outputs: [
            {
                internalType: "string[]",
                name: "results",
                type: "string[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getNextPath",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "getNextPathId",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
        ],
        name: "getPathSize",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "getRandomAsset",
        outputs: [
            {
                internalType: "uint32[]",
                name: "assetsId",
                type: "uint32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
        ],
        name: "isAuthenticated",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
        ],
        name: "isValidPath",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "addrs",
                type: "address[]",
            },
        ],
        name: "multiApprove",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "currentTokenId",
                type: "uint32",
            },
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "pickPath",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "pathId",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "pathSize",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32[]",
                        name: "assets",
                        type: "uint32[]",
                    },
                    {
                        internalType: "string[]",
                        name: "names",
                        type: "string[]",
                    },
                    {
                        internalType: "uint32[]",
                        name: "colours",
                        type: "uint32[]",
                    },
                    {
                        internalType: "bytes",
                        name: "mintData",
                        type: "bytes",
                    },
                ],
                internalType: "struct Asset.PartialStruct",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "currentTokenId",
                type: "uint32",
            },
            {
                internalType: "contract RandomNumber",
                name: "randomNumberController",
                type: "address",
            },
        ],
        name: "pickPath",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "pathId",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "pathSize",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32[]",
                        name: "assets",
                        type: "uint32[]",
                    },
                    {
                        internalType: "string[]",
                        name: "names",
                        type: "string[]",
                    },
                    {
                        internalType: "uint32[]",
                        name: "colours",
                        type: "uint32[]",
                    },
                    {
                        internalType: "bytes",
                        name: "mintData",
                        type: "bytes",
                    },
                ],
                internalType: "struct Asset.PartialStruct",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_assets",
                type: "uint256[]",
            },
        ],
        name: "pushSectionAssets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "resetAssets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "resetNames",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "resetPaths",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "assets",
                type: "uint32[]",
            },
        ],
        name: "setLastAssets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
        ],
        name: "setLastPathId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string[]",
                name: "newNames",
                type: "string[]",
            },
        ],
        name: "setNames",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
        ],
        name: "setNextPathId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "newPathCount",
                type: "uint256",
            },
        ],
        name: "setPathCount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setPathDisabled",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "pathIds",
                type: "uint32[]",
            },
            {
                internalType: "uint256[][]",
                name: "_sections",
                type: "uint256[][]",
            },
        ],
        name: "setPathSections",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "pathId",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "pathSize",
                type: "uint32",
            },
        ],
        name: "setPathSize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "newPathSizes",
                type: "uint32[]",
            },
        ],
        name: "setPathSizes",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setPrivilages",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "sectionId",
                type: "uint32",
            },
            {
                internalType: "uint256[]",
                name: "_assets",
                type: "uint256[]",
            },
        ],
        name: "setSectionAssets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class InfinityMintAsset__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.InfinityMintAsset__factory = InfinityMintAsset__factory;
InfinityMintAsset__factory.abi = _abi;
//# sourceMappingURL=InfinityMintAsset__factory.js.map